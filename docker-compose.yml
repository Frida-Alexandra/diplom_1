services:
  db:
    image: postgres:latest
    # env_file: .env
    container_name: db_host
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data/

  api:
    build: ./backend
    container_name: backend
    restart: always
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DEBUG: ${DEBUG}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      STORAGE_FOLDER: storage

    command: >
      bash -c
        "python3 manage.py migrate
        python3 manage.py create_superuser
        python3 manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media:/backend/storage

  web:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - 3000:3000

volumes:
  postgres_data:
  media: 